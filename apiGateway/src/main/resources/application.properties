spring.application.name=apiGateway


server.port=8084


#Eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8800/eureka
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.instance.hostname=apiGateway

#Api Gateway Routes

# What lb:// means in Spring Cloud Gateway
# lb:// stands for Load-Balanced via Service Discovery.
# When you write: lb://service-name
# it tells the API Gateway:
# Dont send the request to a fixed host like localhost:8081.
# Ask the service registry (like Eureka) for all instances of the service called JOBMS-DEV.
# Pick one instance from the available list (load balancing) and forward the request to it.

# Why we use lb://
# Multiple instances of a service
# Imagine your job service is running on multiple machines for high availability:
# If your API Gateway used http://localhost:8081, all requests go to one instance only.
# With lb://JOBMS-DEV, the Gateway automatically distributes requests among all available instances (round-robin by default).
#
# Dynamic discovery
# Services may start or stop dynamically in cloud environments.
# The Gateway doesnt need to know the exact IP/port  it asks the service registry at runtime.
#
# Failover / Resilience
# If one instance goes down, the Gateway automatically routes traffic to another instance.
# This avoids downtime.

spring.cloud.gateway.server.webmvc.routes[0].id=company_service
spring.cloud.gateway.server.webmvc.routes[0].uri=lb://COMPANYMS
spring.cloud.gateway.server.webmvc.routes[0].predicates[0]=Path=/companies/**

spring.cloud.gateway.server.webmvc.routes[1].id=job_service
spring.cloud.gateway.server.webmvc.routes[1].uri=lb://JOBMS-DEV
spring.cloud.gateway.server.webmvc.routes[1].predicates[0]=Path=/jobs/**

spring.cloud.gateway.server.webmvc.routes[2].id=review_service
spring.cloud.gateway.server.webmvc.routes[2].uri=lb://REVIEWMS
spring.cloud.gateway.server.webmvc.routes[2].predicates[0]=Path=/reviews/**

spring.cloud.gateway.server.webmvc.routes[3].id=eureka_server
spring.cloud.gateway.server.webmvc.routes[3].uri=http://localhost:8800
spring.cloud.gateway.server.webmvc.routes[3].predicates[0]=Path=/eureka/main
spring.cloud.gateway.server.webmvc.routes[3].filters[0]=SetPath=/

spring.cloud.gateway.server.webmvc.routes[4].id=eureka_server_static_files
spring.cloud.gateway.server.webmvc.routes[4].uri=http://localhost:8800/
spring.cloud.gateway.server.webmvc.routes[4].predicates[0]=Path=/eureka/**

#logging
logging.level.root=info
logging.level.org.springframework.cloud.gateway.route.RouteDefinationLocator=info
logging.level.org.springframework.cloud.gateway=trace